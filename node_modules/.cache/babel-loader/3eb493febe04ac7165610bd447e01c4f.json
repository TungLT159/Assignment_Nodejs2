{"ast":null,"code":"var _jsxFileName = \"/Users/tunglt/Desktop/thuc hanh/NJS301x_1.0-A_VN/Assignment 01 Frontend/src/components/search/SearchResult.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\nimport \"./SearchResult.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nconst SearchResult = ({\n  query,\n  option,\n  type\n}) => {\n  const [movies, setMovies] = useState([]);\n  const url = \"http://localhost:3001/api/movies/search\";\n  console.log(option);\n  useEffect(() => {\n    async function fetchData() {\n      await axios.post(url, {\n        option: option,\n        search: query,\n        type: type,\n        token: \"8qlOkxz4wq\"\n      }).then(res => {\n        console.log(res.data.results);\n        const data = res.data.results.filter(item => item !== null);\n        setMovies(data);\n      });\n    }\n\n    if (query) {\n      fetchData();\n    } else {\n      setMovies([]);\n    }\n  }, [url, query, option, type]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Search Result\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters search-resul-container sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, movies.map((movie, index) => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: index,\n      className: `row_poster row_posterLarge`,\n      src: `${base_url}${movie.poster_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/tunglt/Desktop/thuc hanh/NJS301x_1.0-A_VN/Assignment 01 Frontend/src/components/search/SearchResult.jsx"],"names":["React","useState","useEffect","axios","base_url","SearchResult","query","option","type","movies","setMovies","url","console","log","fetchData","post","search","token","then","res","data","results","filter","item","map","movie","index","poster_path","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAO,oBAAP;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AAChD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMU,GAAG,GAAG,yCAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAL,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,SAAf,GAA2B;AACzB,YAAMX,KAAK,CACRY,IADG,CACEJ,GADF,EACO;AACTJ,QAAAA,MAAM,EAAEA,MADC;AAETS,QAAAA,MAAM,EAAEV,KAFC;AAGfE,QAAAA,IAAI,EAAEA,IAHS;AAITS,QAAAA,KAAK,EAAE;AAJE,OADP,EAOHC,IAPG,CAOGC,GAAD,IAAS;AACbP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACC,IAAJ,CAASC,OAArB;AACA,cAAMD,IAAI,GAAGD,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,MAAjB,CAAyBC,IAAD,IAAUA,IAAI,KAAK,IAA3C,CAAb;AACAb,QAAAA,SAAS,CAACU,IAAD,CAAT;AACD,OAXG,CAAN;AAYD;;AAED,QAAId,KAAJ,EAAW;AACTQ,MAAAA,SAAS;AACV,KAFD,MAEO;AACLJ,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD;AACF,GArBQ,EAqBN,CAACC,GAAD,EAAML,KAAN,EAAaC,MAAb,EAAqBC,IAArB,CArBM,CAAT;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACe,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5B,wBACE;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,EAAG,4BAFd;AAGE,MAAA,GAAG,EAAG,GAAEtB,QAAS,GAAEqB,KAAK,CAACE,WAAY,EAHvC;AAIE,MAAA,GAAG,EAAEF,KAAK,CAACG,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATA,CADH,CAFF,CADF;AAiBD,CA7CD;;AA+CA,eAAevB,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"../../utils/axios\";\n\nimport \"./SearchResult.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\n\nconst SearchResult = ({ query, option, type }) => {\n  const [movies, setMovies] = useState([]);\n\n  const url = \"http://localhost:3001/api/movies/search\";\n  console.log(option);\n  useEffect(() => {\n    async function fetchData() {\n      await axios\n        .post(url, {\n          option: option,\n          search: query,\n\t\t  type: type,\n          token: \"8qlOkxz4wq\",\n        })\n        .then((res) => {\n          console.log(res.data.results);\n          const data = res.data.results.filter((item) => item !== null);\n          setMovies(data);\n        });\n    }\n\n    if (query) {\n      fetchData();\n    } else {\n      setMovies([]);\n    }\n  }, [url, query, option, type]);\n\n  return (\n    <div className=\"row\">\n      <h2>Search Result</h2>\n      <div className=\"row_posters search-resul-container sc2\">\n        {movies.map((movie, index) => {\n          return (\n            <img\n              key={index}\n              className={`row_poster row_posterLarge`}\n              src={`${base_url}${movie.poster_path}`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}