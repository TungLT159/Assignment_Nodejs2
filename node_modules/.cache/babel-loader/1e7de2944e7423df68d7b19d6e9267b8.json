{"ast":null,"code":"var _jsxFileName = \"/Users/tunglt/Desktop/thuc hanh/NJS301x_1.0-A_VN/Assignment 01 Frontend/src/components/browse/MovieList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport \"./MovieList.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 15;\n\nfunction MovieList({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    // async function fetchData() {\n    // \tconst request = await axios.get(fetchUrl);\n    // \tconsole.log(request.data.results);\n    // \tsetMovies(request.data.results);\n    // \treturn request;\n    // }\n    // fetchData();\n    fetch(fetchUrl).then(data => data.json()).then(data => {\n      console.log(data);\n      setMovies(data.results);\n    }).catch(error => console.log(error));\n  }, [fetchUrl]);\n\n  const handleClick = movie => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n    } else {\n      setSelectedMovie(movie);\n    }\n  }; // movies.sort((a, b) => b.popularity - a.popularity);\n\n\n  movies.splice(movies_limit);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      onClick: () => handleClick(movie),\n      className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/tunglt/Desktop/thuc hanh/NJS301x_1.0-A_VN/Assignment 01 Frontend/src/components/browse/MovieList.jsx"],"names":["React","useState","useEffect","movieTrailer","MovieDetail","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","movies","setMovies","selectedMovie","setSelectedMovie","fetch","then","data","json","console","log","results","catch","error","handleClick","movie","id","splice","map","poster_path","backdrop_path","name","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAO,iBAAP;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAnB,EAAoD;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACAa,IAAAA,KAAK,CAACN,QAAD,CAAL,CACGO,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESC,IAAD,IAAU;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAL,MAAAA,SAAS,CAACK,IAAI,CAACI,OAAN,CAAT;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CANpB;AAOD,GAfQ,EAeN,CAACd,QAAD,CAfM,CAAT;;AAiBA,QAAMe,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAIZ,aAAa,IAAIA,aAAa,CAACa,EAAd,KAAqBD,KAAK,CAACC,EAAhD,EAAoD;AAClDZ,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAACW,KAAD,CAAhB;AACD;AACF,GAND,CArBkD,CA6BlD;;;AACAd,EAAAA,MAAM,CAACgB,MAAP,CAAcrB,YAAd;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCE,KAAlC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACiB,GAAP,CAAYH,KAAD,IAAW;AACrB,wBACE;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,OAAO,EAAE,MAAMF,WAAW,CAACC,KAAD,CAF5B;AAGE,MAAA,SAAS,EAAG,cAAaf,UAAU,IAAI,iBAAkB,EAH3D;AAIE,MAAA,GAAG,EAAG,GAAEL,QAAS,GACfK,UAAU,GAAGe,KAAK,CAACI,WAAT,GAAuBJ,KAAK,CAACK,aACxC,EANH;AAOE,MAAA,GAAG,EAAEL,KAAK,CAACM,IAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GAZA,CADH,CAFF,eAiBE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,aAAa,iBACZ,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEA,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAjBF,CADF;AAyBD;;AAED,eAAeN,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport \"./MovieList.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 15;\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  useEffect(() => {\n    // async function fetchData() {\n    // \tconst request = await axios.get(fetchUrl);\n    // \tconsole.log(request.data.results);\n    // \tsetMovies(request.data.results);\n    // \treturn request;\n    // }\n    // fetchData();\n    fetch(fetchUrl)\n      .then((data) => data.json())\n      .then((data) => {\n        console.log(data);\n        setMovies(data.results);\n      })\n      .catch((error) => console.log(error));\n  }, [fetchUrl]);\n\n  const handleClick = (movie) => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n    } else {\n      setSelectedMovie(movie);\n    }\n  };\n\n  // movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n\n  return (\n    <div className=\"row\">\n      <h2 className=\"movie-list-title\">{title}</h2>\n      <div className=\"row_posters sc2\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n      <div style={{ padding: \"40px\" }}>\n        {selectedMovie && (\n          <MovieDetail movieData={selectedMovie}  />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}