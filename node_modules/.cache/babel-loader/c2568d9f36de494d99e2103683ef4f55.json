{"ast":null,"code":"var _jsxFileName = \"/Users/tunglt/Desktop/thuc hanh/NJS301x_1.0-A_VN/Assignment 01 Frontend/src/components/browse/MovieList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport \"./MovieList.css\";\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 15;\n\nfunction MovieList({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    // async function fetchData() {\n    // \tconst request = await axios.get(fetchUrl);\n    // \tconsole.log(request.data.results);\n    // \tsetMovies(request.data.results);\n    // \treturn request;\n    // }\n    // fetchData();\n    fetch(fetchUrl).then(data => data.json()).then(data => {\n      console.log(data);\n      setMovies(data.results);\n    });\n  }, [fetchUrl]);\n\n  const handleClick = movie => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null);\n      setTrailerUrl(\"\");\n    } else {\n      setSelectedMovie(movie);\n      movieTrailer(movie.title || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get(\"v\"));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  movies.sort((a, b) => b.popularity - a.popularity);\n  movies.splice(movies_limit);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"movie-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \" \", title, \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row_posters sc2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 62\n    }\n  }, \" \", movies.map(movie => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: movie.id,\n      onClick: () => handleClick(movie),\n      className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n      src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n      alt: movie.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }\n    });\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \" \", selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    movieTrailer: trailerUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 32\n    }\n  }), \" \"), \" \");\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/tunglt/Desktop/thuc hanh/NJS301x_1.0-A_VN/Assignment 01 Frontend/src/components/browse/MovieList.jsx"],"names":["React","useState","useEffect","axios","movieTrailer","MovieDetail","base_url","movies_limit","MovieList","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","selectedMovie","setSelectedMovie","fetch","then","data","json","console","log","results","handleClick","movie","id","url","urlParams","URLSearchParams","URL","search","get","catch","error","sort","a","b","popularity","splice","map","poster_path","backdrop_path","name","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAO,iBAAP;AAEA,MAAMC,QAAQ,GAAG,qCAAjB;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAnB,EAAoD;AAChD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAgB,IAAAA,KAAK,CAACR,QAAD,CAAL,CACKS,IADL,CACWC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADpB,EAEKF,IAFL,CAEWC,IAAD,IAAU;AACZE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,MAAAA,SAAS,CAACO,IAAI,CAACI,OAAN,CAAT;AACH,KALL;AAMH,GAdQ,EAcN,CAACd,QAAD,CAdM,CAAT;;AAgBA,QAAMe,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIV,aAAa,IAAIA,aAAa,CAACW,EAAd,KAAqBD,KAAK,CAACC,EAAhD,EAAoD;AAChDV,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH,KAHD,MAGO;AACHE,MAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACAtB,MAAAA,YAAY,CAACsB,KAAK,CAACjB,KAAN,IAAe,EAAhB,CAAZ,CACKU,IADL,CACWS,GAAD,IAAS;AACX,cAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;AACAjB,QAAAA,aAAa,CAACc,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAb;AACH,OAJL,EAKKC,KALL,CAKYC,KAAD,IAAWb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CALtB;AAMH;AACJ,GAbD;;AAeAvB,EAAAA,MAAM,CAACwB,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,UAAF,GAAeF,CAAC,CAACE,UAAvC;AACA3B,EAAAA,MAAM,CAAC4B,MAAP,CAAcjC,YAAd;AAEA,sBAAS;AACD,IAAA,SAAS,EAAG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEL;AACG,IAAA,SAAS,EAAG,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACsCE,KADtC,MAFK,oBAGgD;AACjD,IAAA,SAAS,EAAG,iBADqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEjDG,MAAM,CAAC6B,GAAP,CAAYf,KAAD,IAAW;AAClB,wBAAS;AACD,MAAA,GAAG,EAAKA,KAAK,CAACC,EADb;AAEL,MAAA,OAAO,EACH,MAAMF,WAAW,CAACC,KAAD,CAHhB;AAIL,MAAA,SAAS,EAAM,cAAaf,UAAU,IAAI,iBAAkB,EAJvD;AAKL,MAAA,GAAG,EAAM,GAAEL,QAAS,GACxBK,UAAU,GAAGe,KAAK,CAACgB,WAAT,GAAuBhB,KAAK,CAACiB,aACxC,EAPU;AAQL,MAAA,GAAG,EAAKjB,KAAK,CAACkB,IART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AAWH,GAZD,CAFiD,MAHhD,oBAmBC;AACF,IAAA,KAAK,EACL;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGF7B,aAAa,iBAAM,oBACf,WADe;AACH,IAAA,SAAS,EAAKA,aADX;AAEf,IAAA,YAAY,EAAKF,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHjB,MAnBD,MAAT;AA+BH;;AAED,eAAeN,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../../utils/axios\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../../components/browse/MovieDetail\";\nimport \"./MovieList.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original\";\nconst movies_limit = 15;\n\nfunction MovieList({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    const [selectedMovie, setSelectedMovie] = useState(null);\n\n    useEffect(() => {\n        // async function fetchData() {\n        // \tconst request = await axios.get(fetchUrl);\n        // \tconsole.log(request.data.results);\n        // \tsetMovies(request.data.results);\n        // \treturn request;\n        // }\n        // fetchData();\n        fetch(fetchUrl)\n            .then((data) => data.json())\n            .then((data) => {\n                console.log(data);\n                setMovies(data.results);\n            });\n    }, [fetchUrl]);\n\n    const handleClick = (movie) => {\n        if (selectedMovie && selectedMovie.id === movie.id) {\n            setSelectedMovie(null);\n            setTrailerUrl(\"\");\n        } else {\n            setSelectedMovie(movie);\n            movieTrailer(movie.title || \"\")\n                .then((url) => {\n                    const urlParams = new URLSearchParams(new URL(url).search);\n                    setTrailerUrl(urlParams.get(\"v\"));\n                })\n                .catch((error) => console.log(error));\n        }\n    };\n\n    movies.sort((a, b) => b.popularity - a.popularity);\n    movies.splice(movies_limit);\n\n    return ( <\n        div className = \"row\" >\n        <\n        h2 className = \"movie-list-title\" > { title } < /h2> <\n        div className = \"row_posters sc2\" > {\n            movies.map((movie) => {\n                return ( <\n                    img key = { movie.id }\n                    onClick = {\n                        () => handleClick(movie) }\n                    className = { `row_poster ${isLargeRow && \"row_posterLarge\"}` }\n                    src = { `${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }` }\n                    alt = { movie.name }\n                    />\n                );\n            })\n        } <\n        /div> <\n        div style = {\n            { padding: \"40px\" } } > {\n            selectedMovie && ( <\n                MovieDetail movieData = { selectedMovie }\n                movieTrailer = { trailerUrl }\n                />\n            )\n        } <\n        /div> <\n        /div>\n    );\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}